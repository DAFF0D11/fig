#!/bin/bash

# Simple music shuffler.

# Takes a directory full of music files in this format:
# 20221108__Delta_Heavy__Stay_Maduk_Remix__music_energy.hiVevrMP2uQ.webm
# Select a playlist based on the tag after "__music_" in the file format.
# With a playlist selected, you can choose multiple songs (in order)
# to play next in the playlist, or what ever shuffled song is next.

MUSIC_LOCATION=$HOME/mus
PLAYLIST="$HOME/.local/share/shuffler_playlist"
SOCKET="/tmp/shuffler_socket"

main() {
    case "$1" in
        -p) MODE=PLAYLIST ;;
        *) MODE=CHOOSE ;;
    esac

    initialise_mpv_instance "$SOCKET"

    while true; do
        case "$MODE" in
            PLAYLIST) SELECTION=$(list_uniq_minor_tags | fzf_playlist);;
            CHOOSE) SELECTION=$(list_playlist | fzf_choose);;
        esac

        [ -z "$SELECTION" ] && exit 0

        case "$SELECTION" in
            ctrl-h*)MODE=CHOOSE ;;
            ctrl-l*)MODE=PLAYLIST ;;
            ctrl-x*) break;; # Emergency quit
            *) case "$MODE" in
                   PLAYLIST) printf "%s" "$SELECTION" | cut_expected | populate_playlist >/dev/null 2>&1; MODE=CHOOSE;;
                   CHOOSE) [ "$SELECTION" ] && printf "%s" "$SELECTION" | cut_expected | update_playlist >/dev/null 2>&1; break ;;
               esac;;
        esac
    done
}

remove_trash_tags() {
    # I just dont use these
    grep -v "_theme\|_delete"
}

list_playlist() {
    cat "$PLAYLIST"
}

clear_playlist(){
    true > "$PLAYLIST"
}

add_playlist_to_socket(){
    echo '{"command":["loadlist","'"$PLAYLIST"'","replace"]}' | socat - "$SOCKET" >&2
}

populate_playlist() {
    local tag
    tag=$(cat -)
    list_music_tag "$tag" | shuf > "$PLAYLIST"
    add_playlist_to_socket
    playerctl --player=mpv pause
}

update_playlist(){
    local selections
    local playlist_minus_selections
    selections=$(cat -)
    playlist_minus_selections=$(echo "$selections" | grep -vf - "$PLAYLIST" | shuf)

    clear_playlist
    echo "$selections" >> "$PLAYLIST"
    echo "$playlist_minus_selections" >> "$PLAYLIST"
    add_playlist_to_socket

    playerctl --player=mpv pause
    playerctl --player=mpv play
}

cut_expected(){
    tail -n +2
}

fzf_choose() {
    fzf -m \
        --prompt="" \
        --layout=reverse \
        --exact \
        --delimiter="__" \
        --with-nth="2,3,4" \
        --expect=ctrl-x,ctrl-h,ctrl-l \
        --bind=change:first \
        --bind=alt-enter:print-query \
        --bind=alt-p:previous-history \
        --bind=alt-n:next-history \
        --bind=ctrl-j:down \
        --bind=ctrl-k:up \
        --bind=alt-j:page-down \
        --bind=alt-k:page-up \
        --bind=ctrl-q:toggle-all \
        --bind=ctrl-space:toggle \
        --bind=tab:replace-query
}

fzf_playlist() {
    fzf -m \
        --prompt="" \
        --layout=reverse \
        --exact \
        --expect=ctrl-x,ctrl-h,ctrl-l \
        --bind=change:first \
        --bind=alt-enter:print-query \
        --bind=alt-p:previous-history \
        --bind=alt-n:next-history \
        --bind=ctrl-j:down \
        --bind=ctrl-k:up \
        --bind=alt-j:page-down \
        --bind=alt-k:page-up \
        --bind=ctrl-q:toggle-all \
        --bind=ctrl-space:toggle \
        --bind=tab:replace-query
}

initialise_mpv_instance() {
    local instance_exists
    instance_exists=$(pgrep -f "mpv --loop-playlist --idle --no-terminal --no-audio-display --input-ipc-server=$1")
    if [[ ! "$instance_exists" ]]; then
        mpv --loop-playlist --idle --no-terminal --no-audio-display --input-ipc-server="$1" &
    fi
}

list_music_tag() {
    list_music_files |
        remove_trash_tags |
        grep "__music_$1"
}

list_file_ids() {
    list_music_files | rev | cut -d "." -f2 | rev
}

list_uniq_minor_tags() {
    list_music_files |
        remove_trash_tags |
        awk -F '[_][_]' '{print $(NF-0)}' |
        cut -d "." -f1 |
        cut -d "_" -f2 |
        sort |
        uniq
}


list_music_files() {
    ls -d "$MUSIC_LOCATION/"*
}

main "$@"
